<?php

namespace EzSystems\EzPlatformSolrSearchEngine;

use eZ\Publish\SPI\Persistence\Content;
use eZ\Publish\SPI\Persistence\Content\Type;
use eZ\Publish\SPI\Search\Field;

/**
 * Interface for services that are used by DocumentMappers in order to
 * determine additional document fields per Content object for the Solr index.
 *
 * The generated fields are most likely not considered by standard queries
 * during the search. Use criteria which implement the CustomFieldInterface
 * in order to search or filter for fields generated by plugins.
 *
 * @see \eZ\Publish\API\Repository\Values\Content\Query\CustomFieldInterface
 */
interface DocumentMapperPluginInterface
{
    /**
     * This is called in order to determine if this plugin implementation
     * knows the given content type and is able to extend it.
     *
     * If it returns true, createExtensionFields() is called respectively,
     * otherwise this plugin is ignored.
     *
     * @param Type $Type
     * @return bool
     */
    public function canExtend(Type $Type);

    /**
     * This is called for every indexed content object and language.
     *
     * The generated Field instances SHOULD get a prefix (e.g. ext_) in their
     * names in order to avoid naming conflicts with existing content fields
     * and to distinguish them from standard fields.
     *
     * @param Content $content
     * @param Type $Type
     * @param string $languageCode
     * @return Field[]
     */
    public function createExtensionFields(Content $content, Type $Type, $languageCode);
}
